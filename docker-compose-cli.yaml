# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: '2'

volumes:
  hr.debut.com:
  accounts.debut.com:
  peer0.debut.com:
  peer1.debut.com:
  peer0.axisbank.com:
  peer1.axisbank.com:
  ca.debut.com:
  ca.axisbank.com:

networks:
  new:

services:

  zookeeper0:
    container_name: zookeeper0
    image: hyperledger/fabric-zookeeper
    environment:
      - ZOO_MY_ID=1
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
    ports:
      - 2111
      - 2888
      - 3888
    networks:
      - new

  zookeeper1:
    container_name: zookeeper1
    image: hyperledger/fabric-zookeeper
    environment:
      - ZOO_MY_ID=2
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
    ports:
      - 2111
      - 2888
      - 3888
    networks:
      - new

  zookeeper2:
    container_name: zookeeper2
    image: hyperledger/fabric-zookeeper
    environment:
      - ZOO_MY_ID=3
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
    ports:
      - 2111
      - 2888
      - 3888
    networks:
      - new

  kafka0:
    image: hyperledger/fabric-kafka
    container_name: kafka0
    environment:
        - KAFKA_LOG_RETENTION_MS=-1
        - KAFKA_MESSAGE_MAX_BYTES=103809024
        - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024
        - KAFKA_BROKER_ID=0
        - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
        - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
        - KAFKA_DEFAULT_REPLICATION_FACTOR=3
        - KAFKA_MIN_INSYNC_REPLICAS=1
    ports:
        - 9092
    depends_on:
        - zookeeper0
        - zookeeper1
        - zookeeper2
    links:
        - zookeeper0:zookeeper0
        - zookeeper1:zookeeper1
        - zookeeper2:zookeeper2
    networks:
      - new

  kafka1:
    image: hyperledger/fabric-kafka
    container_name: kafka1
    environment:
        - KAFKA_LOG_RETENTION_MS=-1
        - KAFKA_MESSAGE_MAX_BYTES=103809024
        - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024
        - KAFKA_BROKER_ID=1
        - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
        - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
        - KAFKA_DEFAULT_REPLICATION_FACTOR=3
        - KAFKA_MIN_INSYNC_REPLICAS=1
    ports:
        - 9092
    depends_on:
        - zookeeper0
        - zookeeper1
        - zookeeper2
    links:
        - zookeeper0:zookeeper0
        - zookeeper1:zookeeper1
        - zookeeper2:zookeeper2
    networks:
      - new

  kafka2:
    image: hyperledger/fabric-kafka
    container_name: kafka2
    environment:
        - KAFKA_LOG_RETENTION_MS=-1
        - KAFKA_MESSAGE_MAX_BYTES=103809024
        - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024
        - KAFKA_BROKER_ID=2
        - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
        - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
        - KAFKA_DEFAULT_REPLICATION_FACTOR=3
        - KAFKA_MIN_INSYNC_REPLICAS=1
    ports:
        - 9092
    depends_on:
        - zookeeper0
        - zookeeper1
        - zookeeper2
    links:
        - zookeeper0:zookeeper0
        - zookeeper1:zookeeper1
        - zookeeper2:zookeeper2
    networks:
      - new

  kafka3:
    image: hyperledger/fabric-kafka
    container_name: kafka3
    environment:
        - KAFKA_LOG_RETENTION_MS=-1
        - KAFKA_MESSAGE_MAX_BYTES=103809024
        - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024
        - KAFKA_BROKER_ID=3
        - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
        - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
        - KAFKA_DEFAULT_REPLICATION_FACTOR=3
        - KAFKA_MIN_INSYNC_REPLICAS=1
    ports:
        - 9092
    depends_on:
        - zookeeper0
        - zookeeper1
        - zookeeper2
    links:
        - zookeeper0:zookeeper0
        - zookeeper1:zookeeper1
        - zookeeper2:zookeeper2
    networks:
      - new

  ca.debut.com:
    extends:
      file: base/docker-compose-base.yaml
      service: ca.debut.com
    container_name: ca.debut.com
    networks:
      - new

  ca.axisbank.com:
    extends:
      file: base/docker-compose-base.yaml
      service: ca.axisbank.com
    container_name: ca.axisbank.com
    networks:
      - new

  couchdb:
    container_name: couchdb
    image: hyperledger/fabric-couchdb:$IMAGE_TAG
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 5984:5984
    networks:
      - new

  hr.debut.com:
    extends:
      file:   base/docker-compose-base.yaml
      service: hr.debut.com
    container_name: hr.debut.com
    depends_on:
      - kafka0
      - kafka1
      - kafka2
      - kafka3
    links:
      - kafka0:kafka0
      - kafka1:kafka1
      - kafka2:kafka2
      - kafka3:kafka3
    networks:
      - new

  accounts.debut.com:
    extends:
      file:   base/docker-compose-base.yaml
      service: accounts.debut.com
    container_name: accounts.debut.com
    depends_on:
      - kafka0
      - kafka1
      - kafka2
      - kafka3
    links:
      - kafka0:kafka0
      - kafka1:kafka1
      - kafka2:kafka2
      - kafka3:kafka3
    networks:
      - new

  peer0.debut.com:
    container_name: peer0.debut.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer0.debut.com
    networks:
      - new
    depends_on:
      - hr.debut.com
      - couchdb

  peer1.debut.com:
    container_name: peer1.debut.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer1.debut.com
    networks:
      - new
    depends_on:
      - hr.debut.com
      - couchdb

  peer0.axisbank.com:
    container_name: peer0.axisbank.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer0.axisbank.com
    networks:
      - new
    depends_on:
      - hr.debut.com
      - couchdb

  peer1.axisbank.com:
    container_name: peer1.axisbank.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer1.axisbank.com
    networks:
      - new
    depends_on:
      - hr.debut.com
      - couchdb

  cli:
    container_name: cli
    image: hyperledger/fabric-tools:$IMAGE_TAG
    tty: true
    stdin_open: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_LOGGING_LEVEL=DEBUG
      #- CORE_LOGGING_LEVEL=INFO
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0.debut.com:7051
      - CORE_PEER_LOCALMSPID=DebutMSP
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/debut.com/peers/peer0.debut.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/debut.com/peers/peer0.debut.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/debut.com/peers/peer0.debut.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/debut.com/users/Admin@debut.com/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
        - ./setup-peer.sh:/opt/gopath/src/github.com/hyperledger/fabric/peer/setup-peer.sh
        - /var/run/:/host/var/run/
        - ./chaincode:/opt/gopath/src/github.com/chaincode
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        - ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
        - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
    # depends_on:
      #  - hr.debut.com
      # - peer0.debut.com
      # - peer1.debut.com
      # - peer0.axisbank.com
      # - peer1.axisbank.com
    networks:
      - new
